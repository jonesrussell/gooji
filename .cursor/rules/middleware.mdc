---
description: 
globs: internal/middleware/**/*.go
alwaysApply: false
---
# Middleware Components

## Overview
The application uses middleware to handle cross-cutting concerns and enhance the HTTP server functionality.

## Core Middleware

### Logging Middleware
- Records HTTP request details
- Tracks response times
- Logs errors and status codes
- Supports different log levels

### Recovery Middleware
- Recovers from panics
- Logs panic details
- Returns 500 error response
- Prevents server crashes

### CORS Middleware
- Handles cross-origin requests
- Configurable allowed origins
- Supports preflight requests
- Manages allowed methods and headers

### Static File Middleware
- Serves static files from web/static
- Handles caching headers
- Supports gzip compression
- Manages file types and MIME types

## Usage
Middleware is applied in the following order:
1. Recovery (outermost)
2. Logging
3. CORS
4. Static Files
5. Application handlers (innermost)

## Configuration
Middleware can be configured through the application configuration:
```yaml
middleware:
  cors:
    allowed_origins: ["*"]
    allowed_methods: ["GET", "POST"]
  static:
    cache_control: "public, max-age=3600"
    enable_gzip: true
```

## Best Practices
- Keep middleware focused and single-purpose
- Handle errors appropriately
- Use appropriate logging levels
- Consider performance impact
- Document middleware behavior
