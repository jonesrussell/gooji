---
description: This rule provides information about FFmpeg integration, including command examples, error handling, and best practices. It should be consulted when working with video processing features or troubleshooting FFmpeg-related issues.
globs: 
alwaysApply: false
---
# FFmpeg Integration

## Overview
The application uses FFmpeg for video processing through a Go wrapper package.

## Core Functionality

### Video Processing
- Video format conversion
- Thumbnail generation
- Duration extraction
- Metadata extraction
- Resolution adjustment

### FFmpeg Commands
Common FFmpeg operations used in the application:

```bash
# Generate thumbnail
ffmpeg -i input.mp4 -ss 00:00:01 -vframes 1 output.jpg

# Get video duration
ffmpeg -i input.mp4 2>&1 | grep "Duration"

# Convert video format
ffmpeg -i input.webm -c:v libx264 -c:a aac output.mp4
```

## Go Integration
The FFmpeg functionality is wrapped in a Go package that provides:
- Command execution
- Error handling
- Progress monitoring
- Resource cleanup

## Requirements
- FFmpeg must be installed on the system
- Minimum FFmpeg version: 4.0
- Required codecs: h264, aac, webm

## Error Handling
The integration handles various FFmpeg-related errors:
- Missing FFmpeg installation
- Invalid input files
- Processing failures
- Resource limitations

## Best Practices
- Validate FFmpeg installation at startup
- Monitor processing resources
- Clean up temporary files
- Handle long-running processes
- Log processing errors
